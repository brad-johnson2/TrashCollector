@model TrashCollector.Models.Customer

@{
    ViewBag.Title = "Details";
}

<h1>Account Information</h1>

<div>

    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AccountBalance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AccountBalance)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SuspendStart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SuspendStart)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SuspendEnd)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SuspendEnd)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CustZip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustZip)
        </dd>
        @Html.HiddenFor(model => model.ApplicationUserId);
    </dl>
</div>


<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>


<body>

    <h3>Pick Up Location</h3>

    <div id="googleMap" style="width:100%;height:400px;"></div>

    @*<script>
            function myMap() {
                var mapProp = {
                    center: new google.maps.LatLng(51.508742, -0.120850),
                    zoom: 5,
                };
                var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
            }
        </script>*@



    @*<script src="https://maps.googleapis.com/maps/api/js?key=@($"{Key.GoogleMapsKey}")&callback=myMap"></script>*@


    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 8,
                center: { lat: -34.397, lng: 150.644 }
            });
            var geocoder = new google.maps.Geocoder();

            document.getElementById('submit').addEventListener('click', function () {
                geocodeAddress(geocoder, map);
            });
        }

        function geocodeAddress(geocoder, resultsMap) {
            //var address = document.getElementById('address').value;
            geocoder.geocode({ 'address': 'model.address', 'zip' : 'model.CustZip' }, function (results, status) {
                if (status === 'OK') {
                    resultsMap.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: resultsMap,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=@($"{Key.GoogleMapsKey}")&callback=initMap">
    </script>

</body>

